@using Blazor.FileReader
@using System.IO
@inject IFileReaderService FileReaderService

<div>
    <label>@Label</label>
    <div>
        <input type="file" @ref="@inputElement" @onchange="@ImageFileSelected" accept="-image/vnd.sealedmedia.softseal.jpg,.jpeg, .png" />
    </div>
    
    <div>
        @if (ImageBase64 != null)
        {
            <div>
                <div>
                    <img src="data:image/jpeg;base64, @ImageBase64" style="width: 400px; "/>
                </div>
            </div>
        }
        @if (ImageURL != null)
        {
            <div>
                <div>
                    <img src="@ImageURL" style="width: 400px; "/>
                </div>
            </div>
        }
        
    </div>
    
</div>

@code
{
    [Parameter] public string Label { get; set; } = "Image";
    [Parameter] public string ImageURL { get; set; }
    [Parameter] public EventCallback<string> OnSelectedImage { get; set; }
    private string ImageBase64;
    ElementReference inputElement;

    async Task ImageFileSelected()
    {
        foreach (var file in await FileReaderService.CreateReference(inputElement).EnumerateFilesAsync())
        {
            using (MemoryStream memoryStream = await file.CreateMemoryStreamAsync(4 * 1024))
            {
                var imageBytes = new byte[memoryStream.Length];
                memoryStream.Read(imageBytes, 0, (int) memoryStream.Length);
                ImageBase64 = Convert.ToBase64String(imageBytes);
                await OnSelectedImage.InvokeAsync(ImageBase64);
                ImageURL = null;
                StateHasChanged();
            }
        }
    }
}

